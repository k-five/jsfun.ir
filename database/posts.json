{
    "home": {
        "the world of javascript": {
            "js world start": "",
            "before 1991": "",
            "1991": "",
            "1992-till-1994": "",
            "1995": "",
            "javascript in reality": "",
            "javascript ecmascript": "",
            "1996 till 2000": "",
            "2001 till 2005": "",
            "2006 till 2010": "",
            "2011 till 2015": "",
            "the ugly bad good parts": "",
            "the ugly part": "",
            "the bad part": "",
            "the good part": ""
        },
        "effective-javascript": {
            "accustoming yourself with javascript": {
                "strict mode": "",
                "implicit coercion explicit coercion": "",
                "prefer primitive types": ""
            },
            "variable scope": {
                "minimize use of global variable": "",
                "check for global object": "",
                "get comfortable with closure": "",
                "immediately invoked function expression": ""
            },
            "working with functions": {
                "function method and constructor": "",
                "higher order functions": "",
                "using call and apply": "",
                "using bind": ""
            },
            "objects": {
                "this binding in javascript": ""
            }
        },
        "effective javascript 2": {
            "effective js 2 start": "",
            "var let const": "",
            "type of functions": "",
            "type of functions 2": "",
            "type of this binding": "",
            "object create assign freeze": "",
            "four ways of creating an object": "",
            "types of for loop": "",
            "inside the browser firefox": "",
            "main task micro task macro task": "",
            "event loop event queue": ""
        },
        "modern javascript": {
            "modern javascript preface": "",
            "compiler vs transpiler": "",
            "why promises": "",
            "promises": "",
            "promises confusing part": "",
            "async await": "",
            "await and parallelism": "",
            "generators the concept": "",
            "generators use case": "",
            "generators and promises": "",
            "proxy": "",
            "resources": ""
        },
        "functional programming javascript": {
            "functional programming preface": "",
            "pipeline architecture": "",
            "data and function": "",
            "declarative API imperative API": "",
            "functional programming learning curve": "",
            "five crucial fp concepts": "",
            "function as first class citizen": "",
            "closure": "",
            "currying": ""
        },
        "react": {
            "three JSX main patterns": "",
            "JSX direct function call": "",
            "stateless component": "",
            "stateful component": "",
            "component communication": "",
            "stateless component communication": "",
            "stateful component communication": "",
            "lets create a simple shopping cart": ""
        },
        "back-end with node.js": "",
        "editor": ""
    }
}
